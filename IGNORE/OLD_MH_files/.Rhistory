library(ggplot2)
library(randomforests)
install.packages("randomForest")
library(randomforests)
library(cowplot)
install.packages?(cowplot)
install.packages(cowplot)
install.packages("cowplot")
library(cowplot)
library(randomforests)
library(ggplot2)
library(cowplot)
library(randomForests)
library(randomForest)
install.packages("irlba", "caret", "quanteda")
install.packages("irlba")
install.packages("caret")
install.packages("quanteda")
install.packages("googlelanguageR")
install.packages("googleLanguageR")
?googleLanguageR
??googleLanguageR
library(googleLanguageR)
install.packages("tensorflow")
install.packages(keras)
install.packages(Keras)
install.packages("Keras")
install.packages("keras")
?gl_nlp
?gl_speech()
gl_speech()
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv")
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = F)
row.names(spam.raw)
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = F)
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
View("spam.csv")
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
view("spam.csv")
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = FALSE)
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = FALSE, row.names = NULL)
spam.raw
View(spam.raw)
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = FALSE, row.names = NULL)
View(spam.raw)
spam.raw(1,1)
spam.raw[,1]
spam.raw[1, ]
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("spam.csv", stringsAsFactors = FALSE, row.names = F)
View(spam.raw)
spam.raw[1, ]
#install.packages("googleLanguageR")
#??googleLanguageR
#library(googleLanguageR)
#install.packages("keras")
#?gl_nlp
#?gl_speech()
#gl_speech()
spam.raw <- read.csv("sms_spam.csv", stringsAsFactors = FALSE)
View(spam.raw)
spam.raw$textlength = nchar(spam.raw$text)
summary(spam.raw$textlength)
ggplot(spam.raw, aes(x = TextLength, fill = label))
library(ggplot2)
ggplot(spam.raw, aes(x = TextLength, fill = label))
ggplot(spam.raw, aes(x = textlength, fill = label))
+ geom_histogram()
hist(spam.raw$textlength)
colnames(spam.raw)
hist(~spam.raw$textlength, spam.raw$type)
hist(spam.raw$textlength, spam.raw$type)
hist(spam.raw$textlength| spam.raw$type)
hist(spam.raw$textlength| type = spam.raw$type)
hist(spam.raw$textlength)
?hist
hist(spam.raw$textlength, spam.raw$type = "ham"  )
colnames(spam.raw)
hist(spam.raw$textlength )
hist(spam.raw$textlength &&spam.raw$type = "ham" )
hist(spam.raw$textlength &&spam.raw$type == "ham" )
hist(spam.raw$textlength && spam.raw$type == "ham" )
hist(spam.raw$textlength | )
hist(spam.raw$textlength)
?split
dummy1 <- split(spam.raw, spam.raw$type, drop = "ham")
dummy1 <- split(spam.raw, spam.raw$type, drop = "spam")
dummy2 <- split(spam.raw, spam.raw$type, drop = "spam")
dummy1 <- split(spam.raw, spam.raw$type, drop = "ham")
hist(dummy1$textlength)
dummy1
dummy2
spam.raw
spam.raw
hist(dummy1)
dummy1
dummy1$type
spam.raw$type
dummy1 <- split(spam.raw, spam.raw$type)
hist(dummy1$textlength)
dummy1
dummy1$type
dummy1$textlength
colnames(dummy1)
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
## Importance of components:
##                           PC1    PC2     PC3     PC4     PC5     PC6
## Standard deviation     2.3782 1.4429 0.71008 0.51481 0.42797 0.35184
## Proportion of Variance 0.6284 0.2313 0.05602 0.02945 0.02035 0.01375
## Cumulative Proportion  0.6284 0.8598 0.91581 0.94525 0.96560 0.97936
##                            PC7    PC8     PC9
## Standard deviation     0.32413 0.2419 0.14896
## Proportion of Variance 0.01167 0.0065 0.00247
## Cumulative Proportion  0.99103 0.9975 1.00000
str()?
str()?
str(mtcars.pca)
str(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca)
install.packages(labeling)
ggbiplot(mtcars.pca)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("plyr")
library(ggbiplot)
ggbiplot(mtcars.pca)
library(ggplot2)
library(scales)
library(plyr)
ggbiplot(mtcars.pca)
.Library"
.Library
install.packages("Rcpp")
ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca)
ggbiplot()?
ggbiplot?
biplot(mtcars.pca)
biplot(mtcars.pca, xlim=c(-0.30, 0.0), ylim=c(-0.1, 0.1))
biplot(mtcars.pca)
