geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y = L_value^(-2.1)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y = L_value^(-3.1)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y = L_value^(-.01)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  L_value^(1)rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  L_value^(1)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  L_value^(2)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  L_value^(4)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  L_value^(.25)*rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  rescaled_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value^(-1/alpha_value)*x_dimensionless, y =  rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3, L_value >10^-4)) +
geom_point(aes(x =x_value, y =  L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(1, 100)) +  scale_y_log10(limits =c(10^0, 10^5)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.67 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.0)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.1)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-3)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-1)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.5)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-1.5)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = L_value*L_value^(1/alpha_value)*x_value, y = L_value^(-2.2)*L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
gamma(3)
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE  <- function(x_nat, alpha){
G*(alpha - 2)*csc(2*pi/alpha)*(alpha^-2)*(1 -2^(3-2/alpha)*(gamma(4 - 2/alpha))^-1 *(x_nat)^(3*alpha - 2))
}
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE(x_dimensionless, alpha_value))
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE  <- function(x_nat, alpha){
G*(alpha - 2)*(sin(2*pi/alpha)^-1)*(alpha^-2)*(1 -2^(3-2/alpha)*(gamma(4 - 2/alpha))^-1 *(x_nat)^(3*alpha - 2))
}
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE(x_dimensionless, alpha_value))
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE(x_dimensionless, alpha_value))
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==1.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==1.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
G*2^(3-2/alpha)*(2 - 3/alpha)^-1*gamma(2/alpha)*pi^-1(x_nat)^(3*alpha - 2)
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(x_dimensionless, alpha_value))
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA  <- function(x_nat, alpha){
G*2^(3-2/alpha)*(2 - 3/alpha)^-1*gamma(2/alpha)*pi^-1(x_nat)^(3*alpha - 2)
}
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(x_dimensionless, alpha_value))
G*2^(3-2/alpha)*(2 - 3/alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA  <- function(x_nat, alpha){
G*2^(3-2/alpha)*(2 - 3/alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
}
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA  <- function(x_nat, alpha){
G*2^(3-2/alpha)*(2 - 3/alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
}
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(x_dimensionless, alpha_value))
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==1.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==1.5 )) +
geom_point(aes(x = L_value^(1/alpha_value)*x_value, y = L_value^(3-2/alpha_value)*rho_times_expected_block_number, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==1.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(1,.5)
G*2^(3-2/alpha)*(2 - 3*alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(x_dimensionless, alpha_value))
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(1,1)
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(1,.5)
G*2^(3-2/alpha)*(2 - 3*alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
G*2^(3-2/alpha)*(2 - 3*alpha)^-1*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
G*2^(3-2/alpha)*(2 - 3*alpha)^-1#*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
G*2^(3-2/alpha)#*(2 - 3*alpha)^-1#*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
alpha
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA  <- function(x_nat, ALPHA){
G*2^(3-2/ALPHA)*(2 - 3*ALPHA)^-1#*gamma(2/alpha)*pi^-1*(x_nat)^(3*alpha - 2)
}
Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA  <- function(x_nat, ALPHA){
G*2^(3-2/ALPHA)*(2 - 3*ALPHA)^-1*gamma(2/ALPHA)*pi^-1*(x_nat)^(3*ALPHA - 2)
}
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
dimensionless_short_dist = Levy_2D_model_expected_block_number_approx_Large_G_RESCALED_SHORT_DIST_ASYMPTOTE_SMALL_ALPHA(x_dimensionless, alpha_value))
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
#geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.67 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5 )) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
geom_point(aes(x = x_dimensionless, y = dimensionless_short_dist, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
?lm()
lm(log(rescaled_expected_block_number) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5))
lm( log(rescaled_expected_block_number +10^-20) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5))
lm( log(rescaled_expected_block_number +10^-20) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3))
lm( log(rescaled_expected_block_number +10^-30) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5))
lm( log(rescaled_expected_block_number +10^-30) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3))
lm( log(rescaled_expected_block_number) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.5, x_dimensionless > .1))
lm( log(rescaled_expected_block_number) ~ log(x_dimensionless), filter(Levy_expected_block_number_NUMERIC_DF, alpha_value ==.3, x_dimensionless > .1))
ggplot(data = Levy_expected_block_number_NUMERIC_DF) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-1, 100)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
theme(legend.position="none")
library(tidyverse)
Levy_expected_block_number_NUMERIC_DF <- read_csv( "Levy_flight_2D_IBD_block_numerics.csv")
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
delta = 1)
Levy_expected_block_number_NUMERIC_DF <- filter(Levy_expected_block_number_NUMERIC_DF, alpha_value < 2, alpha_value > .4)
# Numerical integration becomes more difficult for alpha = .4 and lower
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF, L_value = signif(L_value, 2))
# Makes legend easier to read
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-2)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-4, 10^6)) +
theme(
legend.position = c(.99, .99),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(4, 4, 4, 4)
) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-2)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-4, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# Dimensionful x plots
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF,  x_value >= delta,  L_value < .1)) +
geom_point(aes(x = x_value, y = rho_times_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_value, y = 500*test_power_law5, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^0, 10^3)) +  scale_y_log10(limits = c(10^-1, 10^8))  +
facet_wrap(~alpha_value) +
ggtitle("Rho Times Block Number vs Distance")
library(tidyverse)
Levy_expected_block_number_NUMERIC_DF <- read_csv( "Levy_flight_2D_IBD_block_numerics.csv")
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF,
xbar = (D_value/(L_value*v_value))^(1/alpha_value),
x_dimensionless = x_value/xbar,
rescaled_expected_block_number = L_value^3*v_value*xbar^2*rho_value*expected_block_number,
rho_times_expected_block_number = rho_value*expected_block_number,
delta = 1)
Levy_expected_block_number_NUMERIC_DF <- filter(Levy_expected_block_number_NUMERIC_DF, alpha_value < 2, alpha_value > .4)
# Numerical integration becomes more difficult for alpha = .4 and lower
Levy_expected_block_number_NUMERIC_DF <- mutate(Levy_expected_block_number_NUMERIC_DF, L_value = signif(L_value, 2))
# Makes legend easier to read
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-2)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(alpha_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-4, 10^6)) +
theme(
legend.position = c(.99, .99),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(4, 4, 4, 4)
) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 100)) +  scale_y_log10(limits =c(10^-4, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# Dimensionful x plots
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF,  x_value >= delta,  L_value < .1)) +
geom_point(aes(x = x_value, y = rho_times_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_value, y = 500*test_power_law5, color = as_factor(L_value))) +
scale_x_log10(limits =c(10^0, 10^3)) +  scale_y_log10(limits = c(10^-1, 10^8))  +
facet_wrap(~alpha_value) +
ggtitle("Rho Times Block Number vs Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10000)) +  scale_y_log10(limits =c(10^-4, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10000)) +  scale_y_log10(limits =c(10^-7, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10000)) +  scale_y_log10(limits =c(10^-8, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^6)) +  scale_y_log10(limits =c(10^-8, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^6)) +  scale_y_log10(limits =c(10^-10, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^9)) +  scale_y_log10(limits =c(10^-12, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^9)) +  scale_y_log10(limits =c(10^-20, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^9)) +  scale_y_log10(limits =c(10^-30, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^9)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-2, 10^20)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-5, 10^20)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-10, 10^20)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-7, 10^20)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-7, 10^20)) +  scale_y_log10(limits =c(10^-60, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-7, 10^20)) +  scale_y_log10(limits =c(10^-100, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
# dimensionless x plots below
ggplot(data = filter(Levy_expected_block_number_NUMERIC_DF, L_value >= 10^-3)) +
geom_point(aes(x = x_dimensionless, y = rescaled_expected_block_number, color = as_factor(L_value))) +
#geom_smooth(aes(x = x_dimensionless, y = test_power_law, color = as_factor(alpha_value))) +
scale_x_log10(limits =c(10^-7, 10^20)) +  scale_y_log10(limits =c(10^-50, 10^6)) +
facet_wrap(~alpha_value) + ggtitle("Dimensionless Block Number vs Dimensionless Distance")
setwd("~/Long_Range_Dispersal/data_and_mathematica_plots/small_dispersal_data")
library(tidyverse)
test_data <- as_tibble((read.table("small_dispersal_data.txt",  header = T)))
test_data  <- mutate(test_data, xbar = c*(2*mu)^(-1/alpha),
rho = (coal)^-1,
Da = c^alpha/2,
ybar1 = Da^(1/alpha) )
Levy_model_1D_finite_dist	<- function(x, Da, rho, alpha) {
model <-  gamma(1-alpha)*sin(pi*alpha/2)*x^(alpha - 1)/(2*pi*rho*Da)
}
Levy_model_1D_zero_dist	<- function(Da, rho, alpha) {
delta <- 1
psi0 <- 2^((1-alpha)/2)*gamma(.5 - alpha/2)/( 2^((1-alpha)/2)*gamma(.5 - alpha/2) + 4*pi*abs(rho)*abs(Da)*delta^(1-alpha))
return(psi0)
}
#add columns to tibble
test_data  <- mutate(test_data, finite_dist_model =Levy_model_1D_finite_dist(x0, Da, rho, alpha), zero_dist_model = Levy_model_1D_zero_dist(Da, rho, alpha),mu = as.factor(mu))
test_data <- filter(test_data, mu != 1)
ggplot(data = test_data) + geom_pointrange(aes(x = x0, y = hom, ymin= homLow, ymax = homHigh, color = mu)) +
scale_y_log10() + scale_x_log10() + geom_line(aes(x = x0, y = finite_dist_model)) + geom_line(aes(x = x0, y = zero_dist_model), color = "blue")
