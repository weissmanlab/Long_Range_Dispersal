my_varÄ±able
view(diamonds)
View(diamonds)
library(ggplot2)
View(diamonds)
library(tidyverse)
tibble(diamonds)
library(nycflights2013)
library(tidyverse)
install.packages(nycflights2013)
install.packages("nycflights2013")
install.packages(nycflights13)
install.packages("nycflights13")
library(nycflights13)
flights
filter(flights, month ==1)
filter(flights, month ==1, day ==1)
jan1 <- filter(flights, month ==1, day ==1)
jan1
11|12
filter(flights, arr_delay >= 120)
filter(flights, dest == IAH | dest == HOU)
filter(flights, dest == IAH )
filter(flights, dest == HOU )
flights$dest
filter(flights, dest == "IAH" )
filter(flights, dest %in% c("IAH", "HOU")  )
filter(flights, dest %in% c("IAH", "HOU")  )$dest
flights
filter(flights, carrier %in% c("United", "American")  )
flights$carrier
filter(flights, carrier %in% c("UA", "AA"m "DL")  )
filter(flights, carrier %in% c("UA", "AA", "DL")  )
?flights
filter(flights, is.na(dept_time) == TRUE  )
filter(flights, is.na("dept_time") == TRUE  )
filter(flights, is.na("dep_time") == TRUE  )
filter(flights, is.na(dep_time) == TRUE  )
filter(flights, carrier %in% c(UA, AA, DL)  )
filter(flights, is.na(dep_time) == TRUE  )
flights
filter(flights, is.na(dep_time) == TRUE  )
filter(flights, is.na(dep_time) == TRUE  ) %>% head()
filter(flights, is.na(dep_time) == TRUE  ) %>% data.frame() %>% head()
filter(flights, arr_time == between(0, 1200))
filter(flights, arr_time %>%  between(0, 1200))
filter(flights, arr_time %>%  between(0, 100))
NA^0
NA*0
NA|TRUE
NA|FALSE
mutate(flights, flight_time = arr_time - dep_time)
mutate(flights, flight_time = arr_time - dep_time)$flight_time
mutate(flights, flight_time = arr_time - dep_time)$flight_time/100
?flights
mutate(flights, flight_time = arr_time - dep_time)$flight_time - flights$air_time
mutate(flights, flight_time = arr_time - dep_time)$flight_time
flights$air_time
mutate(flights, flight_time = arr_time - dep_time)$flight_time
mutate(flights, flight_time = arr_time - dep_time)$flight_time*60/100
mutate(flights, flight_time = arr_time - dep_time)$flight_time
mutate(flights, flight_time = arr_time - dep_time)$flight_time%/% 60
mutate(flights, flight_time = arr_time - dep_time)$arr_Time
mutate(flights, flight_time = arr_time - dep_time)$arr_time
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
count(diamonds, cut)
diamonds %>% count(cuts)
diamonds %>% count(,cuts)
diamonds %>% count(,cut)
diamonds %>% count(cut)
diamonds %>% count(,cut)
diamonds$carat
cutwidth(diamonds$carat, .5)
cut_width(diamonds$carat, .5)
?diamonds
?add_residual
library(modelr)
?add_residual
?add_residuals
vignette("tibble")
?tibble
??tibble
vignette("tibble")
library(tidyverse)
x1 <- c("Dec", "Apr", "Jan", "Mar")
sort(x1)
month_levels <- c(
"Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
)
factor(x1, month_levels)
sort(x1)
y1 <- factor(x1, month_levels)
sort(y1)
factor(x1)
gss_cat
count(gss_cat, race)
ggplot(data = gss_cat, aes(race)) + geom_histogram()
ggplot(data = gss_cat, aes(race)) + geom_histogram(stat = count)
ggplot(data = gss_cat, aes(race)) + geom_histogram(stat = "count")
ggplot(data = gss_cat, aes(race)) + geom_bar()
ggplot(data = gss_cat, aes(group = race)) + geom_bar()
gss_cat %>% mean(,rincome, group = race)
gss_cat %>% mean(,rincome)
gss_cat %>% mean(,rincome)
mean(gss_cat$rincome)
gss_cat
ggplot(data = gss_cat, aes(group = rincome)) + geom_bar()
ggplot(data = gss_cat, aes( rincome)) + geom_bar()
ggplot(data = gss_cat, aes( rincome)) + geom_bar() + coord_flip()
gss_cat %>% group_by(, race)
ggplot(data = (gss_cat %>% group_by(,race)), aes( rincome)) + geom_bar() + coord_flip()
ggplot(data = (gss_cat, aes(rincome, group = race)) + geom_bar() + coord_flip()
ggplot(data = gss_cat, aes(rincome, group = race)) + geom_bar() + coord_flip()
ggplot(data = gss_cat, aes(rincome, color = race)) + geom_bar() + coord_flip()
ggplot(data = gss_cat, aes(rincome, color = race, position = dodge)) + geom_bar() + coord_flip()
ggplot(data = gss_cat, aes(rincome, color = race, position = "dodge")) + geom_bar() + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, color = race, position = "dodge")) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, color = race, position = "dodge")) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, color = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_hist( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_histogram( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, y = ..prop..), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
?stat
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, stat = count()), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = count, position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = count(), position = "dodge") + coord_flip()
?stat
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), after_stat = count/sum(count), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), after_stat = count, position = "dodge") + coord_flip()
?stat
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = identity, position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = identity, position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, y = ..count../sum(..count..)), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(y = rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(x = rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(x = rincome, fill = race, y = identity), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), stat = "identity", position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, y = ..count../sum(..count..)), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, position = "dodge")) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(x = rincome, fill = race, y=value), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(x = rincome, fill = race, y=count), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(x = rincome, fill = race, y=count), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "fill") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race, y = ..count..), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
gss_cat %>% grouo_by(,race)
gss_cat %>% group_by(,race)
gss_cat %>% group_by(,race) %>% mean(,rincome)
mean(gss_cat, rincome)
gss_cat %>% group_by(,race) %>% count(,rincome)
gss_cat %>% group_by(,race) %>% count(,rincome)
data.frame(gss_cat %>% group_by(,race) %>% count(,rincome))
gss_cat %>% group_by(,race) %>% count(,rincome)
sum(gss_cat %>% group_by(,race) %>% count(,rincome))
gss_cat %>% group_by(,race) %>% count(,rincome)
gss_cat %>% group_by(,race) %>% count(,rincome)
gss_cat %>% group_by(,race) %>% identity(,rincome)
gss_cat %>% group_by(,race) %>% prop(,rincome)
gss_cat %>% group_by(,race) %>% proportion(,rincome)
gss_cat %>% group_by(,race) %>% count(,rincome)
nrow(gss_cat$race)
nrows(gss_cat$race)
n(gss_cat$race)
n(gss_cat)
nrow(gss_cat)
gss_cat %>% group_by(,race) %>% count(,rincome)/(gss_cat %>% group_by(,race) nrow())
gss_cat %>% group_by(,race) %>% count(,rincome)
gss_cat %>% group_by(,race) %>% count(,rincome)
gss_cat %>% group_by(,race) %>% nrow()
gss_cat %>% group_by(,race) %>% nrrow
gss_cat %>% group_by(,race) %>% nrow()
nrow(gss_cat)
gss_cat %>% group_by(,race) %>% count(,rincome)
ggplot(data = filter(gss_cat, race = black )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == black )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == Black )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == "White" )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome, fill = race), position = "dodge") + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome)) + coord_flip()
ggplot(data = filter(gss_cat, race == "White" )) + geom_bar( aes(rincome)) + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome)) + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome, y = ..count../sum(..count..))) + coord_flip()
ggplot(data = filter(gss_cat, race == "White" )) + geom_bar( aes(rincome, y = ..count../sum(..count..))) + coord_flip()
ggplot(data = filter(gss_cat, race == "Black" )) + geom_bar( aes(rincome, y = ..count../sum(..count..))) + coord_flip()
gss_cat
ggplot(data = gss_cat) + geom_bar( aes(rincome, fill = religion), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(relig)) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(denom)) + coord_flip()
?gss_cat
ggplot(data = gss_cat) + geom_bar( aes(partyid)) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, fill = year), position = dodge) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, fill = year), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, fill = year)) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, color = year)) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid)) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, color = as.factor(year))) + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(partyid, color = as.factor(year)), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(reilig, color = as.factor(year)), position = "dodge") + coord_flip()
ggplot(data = gss_cat) + geom_bar( aes(relig, color = as.factor(year)), position = "dodge") + coord_flip()
setwd("~/Long_Range_Dispersal/Simulation_codes")
library(tidyverse)
test_data <- as_tibble((read.table("aggregated_mh_data.txt",  header = T)))
test_data  <- mutate(test_data, xbar = c*(2*mu)^(-1/alpha), x_nat = x0/xbar, rho = (coal)^-1 )
test_data  <- filter(test_data, alpha == 1.22,  mu < 1, c ==20, x_nat < 40)
test_data  <- mutate(test_data, hom_scale_approx = (rho*xbar*mu ), Scaled_hom =hom_scale_approx*hom, Scaled_homLow =hom_scale_approx*homLow, Scaled_homHigh =hom_scale_approx*homHigh  )
Levy_model_1D_asymptotic	<- function(x, xbar, rhomu, alpha) {
model <-  (2*pi*rhomu*xbar)^-1*sin(alpha*pi/2)*gamma(1 + alpha)*abs(x/xbar)^(-alpha -1)
}
#add columns to tibble
test_data  <- mutate(test_data, Levy_model =Levy_model_1D_asymptotic(x0, xbar,rho*mu, alpha), SLevy_model = hom_scale_approx*Levy_model,mu = as.factor(mu))
ggplot(data = test_data) + geom_pointrange(aes(x = x_nat, y = Scaled_hom, ymin=Scaled_homLow, ymax = Scaled_homHigh, color = mu)) +
scale_y_log10() + scale_x_log10() + geom_line(aes(x = x_nat, y = SLevy_model))
### ABOVE IS MH ANALYSIS.  BELOW IS CDF ANALYSIS.######################################
test_data_CDF <- as_tibble((read.table("aggregated_cdf_data.txt",  header = T)))
test_data_CDF <- filter(test_data_CDF, alpha < 1)
max_CDF <- function( alpha, rho, Da) { # ALPHA LESS THAN ONE ONLY. For alpha >= 1, max_CDF = 1.  Distribution of coalescence times is improper for alpha < 1.
delta <- 1
psi0 = 2^((1-alpha)/2)*gamma(.5 - alpha/2)/( 2^((1-alpha)/2)*gamma(.5 - alpha/2) + 4*pi*abs(rho)*abs(Da)*delta^(1-alpha))
return(psi0)
}
## add new columns to the tibble
test_data_CDF <- mutate(test_data_CDF, rho = coal^-1, Da = .5*c^alpha,
comp_cdf = max_CDF( alpha, rho, Da) - cdf,
comp_cdfLow = max_CDF( alpha, rho, Da) - cdfHigh,
comp_cdfHigh = max_CDF( alpha, rho, Da) - cdfLow,
Scaled_T  = (2*(rho^alpha)*Da)^((1-alpha)^-1)*T,
Scaled_comp_cdf = pi*(1/alpha - 1)/(gamma(1/alpha + 1))*comp_cdf,
Scaled_comp_cdfLow = pi*(1/alpha - 1)/(gamma(1/alpha + 1))*comp_cdfLow,
Scaled_comp_cdfHigh = pi*(1/alpha - 1)/(gamma(1/alpha + 1))*comp_cdfHigh,
model = Scaled_T^(1-1/alpha) , alpha =as.factor(alpha) )
#ggplot(data = test_data_CDF) + geom_pointrange(aes(x = Scaled_T, y = Scaled_comp_cdf, ymin = Scaled_comp_cdfLow, ymax = Scaled_comp_cdfHigh, color = alpha )) +
#scale_y_log10() + scale_x_log10() +geom_line(aes(x = Scaled_T, y =model, color = alpha))
